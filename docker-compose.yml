version: '2'

services:
  # civil:
  #   build: ./
  #   image: mall:2.0
  #   container_name: mall
  #   restart: always
  #   environment:
  #     MYSQL_DSN: "root:root@tcp/mall_db?charset=utf8&parseTime=True&loc=Local"
  #   ports:
  #     - 3000:3000
  #   depends_on:
  #     - mysql
  #     - redis
  mysql:
    container_name: mysql
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mall_db
    volumes:
      - /var/lib/mysql:/var/lib/mysql
    ports:
      - 3306:3306

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    volumes:
      - /usr/local/redis:/usr/local/redis
    ports:
      - 6379:6379

  kibana:
    image: docker.elastic.co/kibana/kibana:7.1.0
    container_name: kibana
    environment:
      - I18N_LOCALE=zh-CN
      - XPACK_GRAPH_ENABLED=true
      - TIMELION_ENABLED=true
      - XPACK_MONITORING_COLLECTION_ENABLED="true"
    ports:
      - 5601:5601

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.0
    container_name: es
    environment:
      - cluster.name=fanone
      - node.name=es
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms64m -Xmx251m"
      - discovery.seed_hosts=es
      - cluster.initial_master_nodes=es
    ulimits:
      memlock:
        soft: -1
        hard: -1
  #-v /mnt/elasticsearch/data:/usr/share/elasticsearch/data -v /mnt/elasticsearch/plugins:/usr/share/elasticsearch/plugins -v /mnt/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
  # -e ES_JAVA_OPTS="-Xms256m -Xmx256m" -e "discovery.type=single-node"  docker.io/elasticsearch:7.11.1

    volumes:
      - /usr/local/elasticsearch/data:/usr/local/elasticsearch/data
      - /usr/local/elasticsearch/config/es/config:/usr/local/elasticsearch/config
    ports:
      - 9200:9200
    restart: always
  minio1:
    image: minio:latest
    container_name: minio_1
    restart: always
    volumes:
      - /home/minio/data:/data
      - /home/minio/config:/root/.minio
    ports:
      - "9000:9000"
      - "9090":"9090"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
