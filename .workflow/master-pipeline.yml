version: '1.0'
name: master-pipeline
displayName: MasterPipeline
triggers:
  trigger: auto
  push:
    branches:
      include:
        - master
stages:
  - name: compile
    displayName: 编译
    strategy: naturally
    trigger: auto
    steps:
      - step: build@golang
        name: build_golang
        displayName: Golang 构建
        golangVersion: 1.12
        commands:
          - mkdir output
          - GOOS=linux GOARCH=amd64 go build -o output/main.amd64 main.go
          - GOOS=linux GOARCH=386 go build -o output/main.linux32 main.go
          - GOOS=windows GOARCH=amd64 go build -o output/main.win64.exe main.go
          - GOOS=windows GOARCH=386 go build -o output/main.win32.exe main.go
          - 'GOOS=darwin GOARCH=amd64 go build -o output/main.darwin main.go '
          - chmod +X output/main.linux32
          - ./output/main.linux32
          - ''
        artifacts:
          - name: BUILD_ARTIFACT
            path:
              - ./output
      - step: publish@general_artifacts
        name: publish_general_artifacts
        displayName: 上传制品
        dependArtifact: BUILD_ARTIFACT
        artifactName: output
        dependsOn: build_golang
      - step: ut@golang
        name: unit_test_go
        displayName: Golang 单元测试
        golangVersion: '1.18'
        commands:
          - '# 默认使用goproxy.cn用户可手动调整'
          - export GOPROXY=https://goproxy.cn
          - '# 默认的单元测试命令'
          - '# 输出测试报告目录到当前工作目录，可自动上传并展示'
          - mkdir -p golang-report
          - '# 未使用Go Mod的用户需要打开一下注释'
          - '# export GOFLAGS=-mod=vendor'
          - go test -v -json -cover -coverprofile cover.out ./... > golang-report/report.jsonl
          - go tool cover -html=cover.out -o golang-report/index.html
        report:
          path: golang-report
          file: report.jsonl
          index: index.html
        checkpoints:
          - key: LineCoverageRate
            value: 0
            logicalOperator: '&&'
            relationalOperator: '>='
        caches:
          - /go/pkg/mod
        notify: []
        strategy:
          retry: '0'
  - name: release
    displayName: 发布
    strategy: naturally
    trigger: auto
    steps:
      - step: publish@release_artifacts
        name: publish_release_artifacts
        displayName: 发布
        dependArtifact: output
        version: 1.0.0.0
        autoIncrement: true
